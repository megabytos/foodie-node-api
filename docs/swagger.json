{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Foodie app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of foodie's app"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Auth operations, user info and list operation with followers."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register an user",
        "description": "Register an user",
        "operationId": "registerUser",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 32,
                    "example": "John"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "examplepwd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registered an user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "data"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Signup successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "user",
                        "token"
                      ],
                      "properties": {
                        "user": {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "email",
                            "avatarURL"
                          ],
                          "properties": {
                            "id": {
                              "description": "User's id",
                              "type": "string",
                              "example": "671264281222679af8484a00"
                            },
                            "name": {
                              "description": "User's name",
                              "type": "string",
                              "example": "John"
                            },
                            "email": {
                              "description": "User's email",
                              "type": "string",
                              "example": "john@gmail.com"
                            },
                            "avatarURL": {
                              "description": "User's avatar URL",
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "token": {
                          "description": "JWT Token for user authentication",
                          "type": "string",
                          "example": "jwt_token_example"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Log in an existing user",
        "description": "Log in an existing user using email and password",
        "operationId": "loginUser",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@gmail.com",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "examplepwd",
                    "description": "User's password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "data"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User successfully log in"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "user",
                        "token"
                      ],
                      "properties": {
                        "user": {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "email",
                            "avatarURL"
                          ],
                          "properties": {
                            "id": {
                              "description": "User's id",
                              "type": "string",
                              "example": "671264281222679af8484a00"
                            },
                            "name": {
                              "description": "User's name",
                              "type": "string",
                              "example": "John"
                            },
                            "email": {
                              "description": "User's email",
                              "type": "string",
                              "example": "john@gmail.com"
                            },
                            "avatarURL": {
                              "description": "User's avatar URL",
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "token": {
                          "description": "JWT Token for user authentication",
                          "type": "string",
                          "example": "jwt_token_example"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Email or password is wrong"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout user",
        "description": "Logs out the user",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current logged-in user info",
        "description": "Get the information of the currently logged-in user based on the JWT token",
        "operationId": "getCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "data"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User info found successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "user",
                        "token"
                      ],
                      "properties": {
                        "user": {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "email",
                            "avatarURL"
                          ],
                          "properties": {
                            "id": {
                              "description": "User's id",
                              "type": "string",
                              "example": "671264281222679af8484a00"
                            },
                            "name": {
                              "description": "User's name",
                              "type": "string",
                              "example": "John"
                            },
                            "email": {
                              "description": "User's email",
                              "type": "string",
                              "example": "john@gmail.com"
                            },
                            "avatarURL": {
                              "description": "User's avatar URL",
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "token": {
                          "description": "JWT token for the authenticated user",
                          "type": "string",
                          "example": "jwt_token_example"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user avatar",
        "description": "Update the avatar image of the currently authenticated user",
        "operationId": "updateUserAvatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "User avatar image file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "data"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Avatar has changed successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "avatarURL"
                      ],
                      "properties": {
                        "id": {
                          "description": "User's id",
                          "type": "string",
                          "example": "671264281222679af8484a00"
                        },
                        "avatarURL": {
                          "description": "User's avatar URL",
                          "type": "string",
                          "example": "https://res.cloudinary.com/example-avatar.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request: Invalid file type or no file attached"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/following": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of users the current user is following",
        "description": "Retrieve a list of users that the authenticated user is following along with their recipes",
        "operationId": "getFollowedUsers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination of followed users",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of followed users to return per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "recipePage",
            "in": "query",
            "description": "Page number for pagination of recipes",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "recipeLimit",
            "in": "query",
            "description": "Number of recipes to return per page for each followed user",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved followed users with their recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "total",
                        "page",
                        "limit",
                        "followedUsers"
                      ],
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of followed users",
                          "example": 15
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number for followed users",
                          "example": 1
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of followed users per page",
                          "example": 10
                        },
                        "followedUsers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "email",
                              "avatarURL",
                              "recipes"
                            ],
                            "properties": {
                              "id": {
                                "description": "User's id",
                                "type": "string",
                                "example": "671264281222679af8484a00"
                              },
                              "name": {
                                "description": "User's name",
                                "type": "string",
                                "example": "John"
                              },
                              "email": {
                                "description": "User's email",
                                "type": "string",
                                "example": "john@gmail.com"
                              },
                              "avatarURL": {
                                "description": "User's avatar URL",
                                "type": "string",
                                "example": "https://example.com/avatar.jpg"
                              },
                              "recipes": {
                                "type": "object",
                                "required": [
                                  "total",
                                  "recipePage",
                                  "recipeLimit",
                                  "recipes"
                                ],
                                "properties": {
                                  "total": {
                                    "description": "Total number of recipes for this followed user",
                                    "type": "integer",
                                    "example": 20
                                  },
                                  "recipePage": {
                                    "description": "Current page for recipes of the followed user",
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "recipeLimit": {
                                    "description": "Limit of recipes per page",
                                    "type": "integer",
                                    "example": 4
                                  },
                                  "recipes": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name"
                                      ],
                                      "properties": {
                                        "id": {
                                          "description": "Recipe's id",
                                          "type": "string",
                                          "example": "61d1b2d2f0c0b5001cfd5be3"
                                        },
                                        "name": {
                                          "description": "Recipe's name",
                                          "type": "string",
                                          "example": "Spaghetti Bolognese"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "message"
              ],
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Not authorized"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "message"
              ],
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "message"
              ],
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                }
              }
            }
          }
        }
      }
    }
  }
}